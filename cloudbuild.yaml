steps:

# Build container image with Cloud Build from Dockerfile
- name: 'gcr.io/cloud-builders/docker'
  args: [
          'build',
          '-t',
          '$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/$GCP_IMAGE_NAME:latest',
          '.'
    ]
  id: '$GCP_REGION Build'

# Push the image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    '$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/$GCP_IMAGE_NAME'
  ]
  id: '$GCP_REGION Push'

# Deploy to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
          'run',
          'deploy',
          '$GCP_CLOUDRUN_NAME',
          '--platform',
          'managed',
          '--region',
          '$GCP_REGION',
          '--image',
          '$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/$GCP_IMAGE_NAME',
          '--service-account',
          '$GCP_SERVICE_ACCOUNT',
          '--vpc-connector',
          'projects/$VPC_HOST_PROJECT/locations/$GCP_REGION/connectors/$SERVERLESS_VPC_CONNECTOR',
          '--set-cloudsql-instances',
          '$MAIN_CLOUDSQL_INSTANCE',
          '--allow-unauthenticated',
    ]
  id: '$GCP_REGION Deploy'
  entrypoint: gcloud
images:
- '$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GCP_REPO_NAME/$GCP_IMAGE_NAME:latest'
